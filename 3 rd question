int power(int base, int exp) {
    long long result = 1;
    for (int i = 0; i < exp; i++) {
        result *= base;
        if (result > INT_MAX) return INT_MAX; // early stop to prevent overflow
    }
    return (int)result;
}

int findNthRoot(int n, int m) {
    int low = 1, high = m;

    while (low <= high) {
        int mid = low + (high - low) / 2;
        int midPower = power(mid, n);

        if (midPower == m){
        return mid;
        }
        else if (midPower < m) {
        low = mid + 1;
        }
        else{
        high = mid - 1;
        }
    }

    return -1;
}
